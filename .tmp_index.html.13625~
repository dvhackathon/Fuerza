<!DOCTYPE html> 
<html>

<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1"> 
	<title>Anti-Stalker Checklist</title> 
	<link rel="stylesheet" href="http://code.jquery.com/mobile/1.3.0-beta.1/jquery.mobile-1.3.0-beta.1.min.css" />
	<script src="http://code.jquery.com/jquery-1.9.0.min.js"></script>
	<script src="http://code.jquery.com/mobile/1.3.0-beta.1/jquery.mobile-1.3.0-beta.1.min.js"></script>
</head> 

	
<body> 

<!-- Start of first page: #one -->
<div data-role="page" id="intro">

	<div data-role="header">
		<h1>Anti-Stalker Checklist</h1>
	</div><!-- /header -->

	<div data-role="content" >	
		<h2>Step 1: Introduction, Pre-checklist</h2>
		
		<p>
			General information about the purpose of the site.
		</p>
		<p>
			If you are a helper or a target seeking help from a helper, the first step is to follow this protocol for general communication.
		<p>
		<ul>
			<li>At the very beginning of the call: do not discuss at that moment whether or not the line is tapped.
			<li>if the partner or person on the call brings it up, redirect away from this topic as the tapper will overhear.
			<li>always ask the client or person on the call at very beginning of conversation what phone they are using.
			<li>...
		</ul>
		
		<p><a href="#triage" data-role="button">Start Triage Checklist</a></p>	
	</div>
	<div data-role="footer" data-theme="d">
		<h4>Introduction</h4>
	</div><!-- /footer -->
</div><!-- /page one -->


<!-- Start of second page: #triage -->
<div data-role="page" id="triage">

	<div data-role="header">
		<h1>Step 2: Triage</h1>
	</div><!-- /header -->

	<div data-role="content" >
		
		<script type="text/javascript">
			var checklist = {
				name: 'Triage',
				threshold_cound: 1,
				categories: [
					{
						name: 'Cell Problems',
						questions: [
							{
								name: 'Cell sounds funny?',
								type: 'multiple',
								values: {'little': 'A little', 'lot': 'A lot'},
								threshold: 'little',
								recommendations: [
									'Play white noise all the time.'
								] 
							},
							{
								name: 'Video camera light is on all the time?',
								type: 'yes-no',
								values: ['yes','no'],
								threshold: 'yes',
								recommendations: [
									'Install anti-stalking software.',
									'Smash cell with hammer.'
								] 
							}
						]
					},
					{
						name: 'Email Problems',
						questions: [
							{
								name: 'Suspicious inbox?',
								type: 'multiple',
								values: {'little': 'A little', 'lot': 'A lot'},
								threshold: 'little',
								recommendations: [
									'Use tor.'
								] 
							},
							{
								name: 'Lots of spam?',
								type: 'yes-no',
								values: ['yes','no'],
								threshold: 'yes',
								recommendations: [
									"Dont worry!"
								] 
							}
						]
					}
				]
			};
		
			var answers = [
				{1: [1,2], 2: [2,4]}
			];
		
			function create_checklist(checklist,elem) {
				var qcnt=1;
				var ccnt=1;
				var res_html = '';
				$.each(checklist.categories, function(i,category){
					res_html += create_category(category, ccnt, qcnt);
					ccnt+=1;
				});
				res_html += "\n";
				elem.append(res_html);
			};
		
			function create_category(category, ccnt, qcnt) {
				var res_html = "<div class='category' id='category-"+ccnt+"'>\n";
				res_html += "<h3>Category "+ccnt+'. '+ category.name + "</h3>\n";
				$.each(category.questions, function(i,q) {
					res_html += create_question(q, ccnt, qcnt);
					qcnt+=1;
				});
				res_html += "</div>\n";
				return res_html;
			};
		
			function create_question(question, ccnt, qcnt) {
				var res_html = '<div data-role="fieldcontain">';
				var qnum = ccnt+'-'+qcnt;
				
				res_html += '<label for="question-'+qnum+'">'+qnum+'. '+question.name+'</label>' + "\n";
				
				if ( question.type == 'yes-no' ) {
					res_html += '<select name="question-'+qnum+'" id="question-'+qnum+'" data-role="slider">'  + "\n";
					res_html += '	<option value="'+question.values[0]+'">'+question.values[0].toUpperCase()+'</option>' + "\n";
					res_html += '	<option value="'+question.values[1]+'">'+question.values[1].toUpperCase()+'</option>' + "\n";
					res_html += '</select>' + "\n";
				}
				else if (question.type == 'multiple') {
					res_html += '<select name="question-'+qnum+'" id="question-'+qnum+'">' + "\n";
					$.each(question.values, function(k,v) {
						res_html += '	<option value="'+k+'">'+v+'</option>' + "\n";
					});
					res_html += '</select>' + "\n";
				}
				res_html += "</div>\n";
				// return res_html;
				return res_html;
			};
			
			function find_recommendation(checklist, question, qnum) {
				value = $('#question-'+qnum).val()
				if (value == question.threshold) {
					return question.recommendations;
				}
				else {
					return [];
				}
			};
			
			function find_recommendations(checklist,prognosis_elem,elem){
				var ccnt = 1;
				var qcnt = 1;
				var res_html = '';
				var threshold_count = 0;
				
				$.each(checklist.categories, function(i, category) {
					res_html += '<h3>Category: ' + category.name + "</h3>\n";
					$.each(category.questions, function(j, question) {
						qnum = ccnt + '-' + qcnt;
						var recommendations = find_recommendation(checklist, question, qnum);
						console.log('for value ' + question.value + ' recommendation ' + recommendations);
						
						if (recommendations.length > 0) {
							threshold_count += 1;
							res_html += "<h5>"+question.name+"</h5>";
							res_html += "<ul>\n"
							
							$.each(recommendations, function(i,rec){
								res_html += "<li>"+rec+"</li>";
							});
							res_html += "</ul>\n";
						}
						qcnt += 1;
					});
					ccnt += 1;
				});
				console.log(res_html);
				if ( threshold_count >= checklist.threshold_count) {
					prognosis_elem.html('');
					elem.html(res_html);
				}
				else {
					prognosis_elem.html('');
					elem.html("None");
				}
			};
		
			function update_recommendations(checklist, elem) {
				var recs = find_recommendations(checklist,elem);
				
			}
		
			$(function(){
				var elem = $('#triage-field-container');
				var res_html = create_checklist(checklist,elem);
				elem.append(res_html);
				find_recommendations(checklist,$('#triage-prognosis'),$('#triage-recommendations'));
				
			});
		</script>
		
		<form name="triage-form" id="triage-form" action="#" method="get">
			<div data-role="fieldcontain" id='triage-field-container'>
				
			</div>
			
		</form>
		
		
	</div>
	
	<p><a href="#summary" data-role="button" onclick="find_recommendations(checklist, $('#triage-field-container'));">Summary</a></p>
	<p><a data-rel="back" data-role="button">Back</a></p>	
	
	
	<div data-role="footer">
		<h4>Triage</h4>
	</div><!-- /footer -->
</div><!-- /page two -->

<!-- Start of third page: #summary -->
<div data-role="page" id="summary">

	<div data-role="header">
		<h1>Step 3: Summary</h1>
	</div><!-- /header -->

	<div data-role="content" >	
		<p>Based on your answers in triage, we think you are:
		<h1 id="triage-prognosis"></h3>
	
		<h2>Recommendations</h2>
		
		<div id="triage-recommendations">
		</div>
		
		<p><a href="#diagnosis" data-role="button">Diagnosis</a></p>	
		<p><a data-rel="back" data-role="button">Back</a></p>	
	</div>
	
	<div data-role="footer">
		<h4>Summary</h4>
	</div><!-- /footer -->
</div><!-- /page three -->

<!-- Start of fourth page: #diagnosis -->
<div data-role="page" id="diagnosis">

	<div data-role="header">
		<h1>Step 4: Diagnosis</h1>
	</div><!-- /header -->

	<div data-role="content" >	
		<p>Since you are radioactive, lets dig in and understand you problem better.
	
			<form name="diagnosis-form" id="diagnosis-form" action="#" method="get">

				<div data-role="fieldcontain">
					<label for="question-1">Question 1 (Yes/No example)</label>
					<select name="question-1" id="question-1" data-role="slider">
						<option value="no">No</option>
						<option value="yes">Yes</option>
					</select>
				</div>

				<div data-role="fieldcontain">
				<fieldset data-role="controlgroup">
					<legend>Question 2 (Select Example):</legend>
					<input type="checkbox" name="checkbox-1a" id="checkbox-1a" class="custom" />
					<label for="checkbox-1a">High</label>

					<input type="checkbox" name="checkbox-2a" id="checkbox-2a" class="custom" />
					<label for="checkbox-2a">Medium</label>

					<input type="checkbox" name="checkbox-3a" id="checkbox-3a" class="custom" />
					<label for="checkbox-3a">Low</label>

					<input type="checkbox" name="checkbox-4a" id="checkbox-4a" class="custom" />
					<label for="checkbox-4a">Non-Existant</label>
			    </fieldset>
				</div>

				<div data-role="fieldcontain">
					<label for="slider">Question 3 (Range):</label>
				 	<input type="range" name="slider" id="slider" value="50" min="0" max="100" data-highlight="true"  />
				</div>

			</form>
	
	
			<p><a data-rel="back" data-role="button">Back</a></p>	
		<p><a href="#finale" data-role="button">Final Recommendation</a></p>	
		
	</div>
	
	<div data-role="footer">
		<h4>Summary</h4>
	</div><!-- /footer -->
</div><!-- /page fourh -->

<!-- Start of fifth page: #finale -->
<div data-role="page" id="finale">

	<div data-role="header">
		<h1>Step 5: Finale Recommendations</h1>
	</div><!-- /header -->

	<div data-role="content" >	
		<p>Now that we understand your problem better, here are some more recommendations.
	
		<h5>Problem 1: Fine-grained solutions to some problem</h5>
		<ol>
			<li>Do Thing 1.</li>
			<li>Do Thing 2.</li>
		</ol>

		<h5>Problem 2: Fine-grained solutions to some problem</h5>
		<ol>
			<li>Do Thing 1.</li>
			<li>Do Thing 2.</li>
		</ol>
		<p><a data-rel="back" data-role="button">Back</a></p>	
	</div>
	
	<div data-role="footer">
		<h4>Finale Recommendations</h4>
	</div><!-- /footer -->
</div><!-- /page three -->
</body>
</html>